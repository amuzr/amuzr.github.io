{"version":3,"sources":["webpack:///./src/templates/project.tsx","webpack:///./src/components/PostCard.tsx"],"names":["IndexPageStyle","name","styles","ProjectPage","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts__WEBPACK_IMPORTED_MODULE_8__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2__","lang","config","title","content","_components_Wrapper__WEBPACK_IMPORTED_MODULE_4__","_components_Header__WEBPACK_IMPORTED_MODULE_5__","css","role","data","allMarkdownRemark","edges","filter","edge","node","fields","collection","map","post","frontmatter","draft","_components_PostCard__WEBPACK_IMPORTED_MODULE_7__","key","slug","children","_components_Footer__WEBPACK_IMPORTED_MODULE_6__","pageQuery","PostCardStyle","PostCardContent","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","PostCardTitle","PostCardExcerpt","ReadingTime","PostCardImage","PostCard","_ref","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","excerpt","timeToRead","image","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","a","alt","style","height","fluid","childImageSharp"],"mappings":"0NAeMA,EAAc,CAAAC,KAAA,UAAAC,OAAA,qCAgDLC,UA7B2B,SAAAC,GACxC,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAaC,UAAU,iBACrBH,OAAAC,EAAA,EAAAD,CAACI,EAAA,OAAD,KACEJ,OAAAC,EAAA,EAAAD,CAAA,QAAMK,KAAK,OACXL,OAAAC,EAAA,EAAAD,CAAA,aAAQM,IAAOC,OACfP,OAAAC,EAAA,EAAAD,CAAA,QAAMJ,KAAK,cAAcY,QAAQ,UAEnCR,OAAAC,EAAA,EAAAD,CAACS,EAAA,EAAD,KACET,OAAAC,EAAA,EAAAD,CAACU,EAAA,EAAD,MACAV,OAAAC,EAAA,EAAAD,CAAA,QAAMW,IAAKhB,EAAgBiB,KAAK,QAC7Bb,EAAMc,KAAKC,kBAAkBC,MAC3BC,OAAO,SAAAC,GAAI,MAAoC,YAAhCA,EAAKC,KAAKC,OAAOC,aAChCC,IAAI,SAAAC,GAEH,OACmC,IAAhCA,EAAKJ,KAAKK,YAAYC,OACrBxB,OAAAC,EAAA,EAAAD,CAACyB,EAAA,EAAD,CAAUC,IAAKJ,EAAKJ,KAAKC,OAAOQ,KAAML,KAAMA,EAAKJ,UAK1DnB,EAAM6B,SACP5B,OAAAC,EAAA,EAAAD,CAAC6B,EAAA,EAAD,SAQD,IAAMC,EAAS,8FCxDhBC,QAAa,CAAAnC,KAAA,SAAAC,OAAA,kFASbmC,EAAkBhC,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,YAAGlC,CAAH,CAAAJ,KAAA,SAAAC,OAAA,gBAGfsC,EAAgBnC,OAAAiC,EAAA,EAAAjC,CAAA,MAAHkC,OAAA,YAAGlC,CAAH,CAAAJ,KAAA,UAAAC,OAAA,uDAQbuC,EAAkBpC,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,YAAGlC,CAAH,CAAAJ,KAAA,UAAAC,OAAA,4CAIfwC,EAAcrC,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,YAAGlC,CAAH,CAAAJ,KAAA,UAAAC,OAAA,gFAOXyC,EAAgBtC,OAAAiC,EAAA,EAAAjC,CAAA,OAAHkC,OAAA,YAAGlC,CAAH,CAAAJ,KAAA,UAAAC,OAAA,wGAiDJ0C,IA7B2B,SAAAC,GAAc,IAAXlB,EAAWkB,EAAXlB,KAC3C,OACEtB,OAAAyC,EAAA,EAAAzC,CAAA,WAASG,UAAU,YAAYQ,IAAKoB,EAAenB,KAAK,WACtDZ,OAAAyC,EAAA,EAAAzC,CAAC0C,EAAA,EAAD,CAAMC,GAAIrB,EAAKH,OAAOQ,MACpB3B,OAAAyC,EAAA,EAAAzC,CAACgC,EAAD,CAAiB7B,UAAU,qBACzBH,OAAAyC,EAAA,EAAAzC,CAAA,cACEA,OAAAyC,EAAA,EAAAzC,CAACmC,EAAD,KAAgBb,EAAKC,YAAYhB,QAEnCP,OAAAyC,EAAA,EAAAzC,CAACoC,EAAD,KACEpC,OAAAyC,EAAA,EAAAzC,CAAA,SAAIsB,EAAKsB,UAEX5C,OAAAyC,EAAA,EAAAzC,CAACqC,EAAD,KAAcf,EAAKuB,WAAnB,eAGHvB,EAAKC,YAAYuB,OAChB9C,OAAAyC,EAAA,EAAAzC,CAAC0C,EAAA,EAAD,CAAMC,GAAIrB,EAAKH,OAAOQ,MACpB3B,OAAAyC,EAAA,EAAAzC,CAACsC,EAAD,KACEtC,OAAAyC,EAAA,EAAAzC,CAAC+C,EAAAC,EAAD,CACEC,IAAK3B,EAAKC,YAAYhB,MACtB2C,MAAO,CAAEC,OAAQ,QACjBC,MAAO9B,EAAKC,YAAYuB,MAAMO,gBAAgBD","file":"component---src-templates-project-tsx-63b0e63ed00d8e951d23.js","sourcesContent":["import { graphql } from 'gatsby';\nimport * as React from 'react';\nimport { css } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\n\nimport config from '../website-config';\n\nimport Wrapper from '../components/Wrapper';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport PostCard from '../components/PostCard';\nimport IndexLayout from '../layouts';\n\nimport { PageContext } from './post';\n\nconst IndexPageStyle = css`\n  flex: 1 1 auto;\n  align-items: center;\n`;\n\nexport interface IndexProps {\n  pageContext: {\n    currentPage: number;\n    numPages: number;\n  };\n  data: {\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst ProjectPage: React.FC<IndexProps> = props => {\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang=\"ko\" />\n        <title>{config.title}</title>\n        <meta name=\"description\" content=\"test\" />\n      </Helmet>\n      <Wrapper>\n        <Header />\n        <main css={IndexPageStyle} role=\"main\">\n          {props.data.allMarkdownRemark.edges\n            .filter(edge => edge.node.fields.collection === 'project')\n            .map(post => {\n              // filter out drafts in production\n              return (\n                (post.node.frontmatter.draft !== true || process.env.NODE_ENV !== 'production') && (\n                  <PostCard key={post.node.fields.slug} post={post.node} />\n                )\n              );\n            })}\n        </main>\n        {props.children}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default ProjectPage;\n\nexport const pageQuery = graphql`\n  query projectPageQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n          }\n          excerpt(truncate: true)\n          fields {\n            layout\n            slug\n            collection\n          }\n        }\n      }\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nconst PostCardStyle = css`\n  margin: 0 0 4rem;\n  display: flex;\n\n  @media (max-width: 500px) {\n    flex-direction: column;\n    /* margin: 0 0 4rem; */\n  }\n`;\nconst PostCardContent = styled.div`\n  width: 100%;\n`;\nconst PostCardTitle = styled.h1`\n  font-weight: 700;\n  margin: 0;\n\n  a {\n    color: rgba(0, 0, 0, 0.8);\n  }\n`;\nconst PostCardExcerpt = styled.div`\n  margin: 0.3rem 0 0.4em;\n  line-height: 1.45;\n`;\nconst ReadingTime = styled.div`\n  display: block;\n  font-family: 'Avenir';\n  font-size: 0.8rem;\n  color: rgba(0, 0, 0, 0.58);\n  /* margin: 0.3rem 0; */\n`;\nconst PostCardImage = styled.div`\n  margin-left: 2rem;\n\n  img {\n    width: 9rem;\n  }\n\n  @media (max-width: 500px) {\n    margin: 0;\n    order: -1;\n\n    .card__img {\n        width: 100%;\n    }\n`;\n\nexport interface PostCardProps {\n  post: PageContext;\n}\n\nconst PostCard: React.FC<PostCardProps> = ({ post }) => {\n  return (\n    <article className=\"post-card\" css={PostCardStyle} role=\"article\">\n      <Link to={post.fields.slug}>\n        <PostCardContent className=\"post-card-content\">\n          <header>\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\n          </header>\n          <PostCardExcerpt>\n            <p>{post.excerpt}</p>\n          </PostCardExcerpt>\n          <ReadingTime>{post.timeToRead} min read</ReadingTime>\n        </PostCardContent>\n      </Link>\n      {post.frontmatter.image && (\n        <Link to={post.fields.slug}>\n          <PostCardImage>\n            <Img\n              alt={post.frontmatter.title}\n              style={{ height: '100%' }}\n              fluid={post.frontmatter.image.childImageSharp.fluid}\n            />\n          </PostCardImage>\n        </Link>\n      )}\n    </article>\n  );\n};\n\nexport default PostCard;\n"],"sourceRoot":""}