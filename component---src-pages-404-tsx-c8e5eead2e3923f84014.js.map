{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./src/styles/colors.ts","webpack:///./src/website-config.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Wrapper.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/favicon.ico","webpack:///./src/styles/shared.ts"],"names":["ErrorTemplate","name","styles","ErrorCode","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","ErrorDescription","colors","midgrey","ErrorLink","NotFoundPage","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_layouts__WEBPACK_IMPORTED_MODULE_7__","_components_Wrapper__WEBPACK_IMPORTED_MODULE_6__","_components_Header__WEBPACK_IMPORTED_MODULE_5__","id","css","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","outer","inner","style","textAlign","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","__webpack_require__","d","__webpack_exports__","blue","green","purple","yellow","red","darkgrey","lightgrey","whitegrey","pink","brown","config","title","description","siteUrl","loader","enqueue","React","createContext","m","module","exports","require","default","StyledWrapper","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Wrapper","_ref","children","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","HeaderStyles","HeaderTitle","HeaderNav","HeaderLink","Header","role","href","gatsby__WEBPACK_IMPORTED_MODULE_2__","GlobalStyles","darken","lighten","IndexLayout","props","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","rel","favicon","type","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","p","ArticleWrapper","PostTitle","PostDate"],"mappings":"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","file":"component---src-pages-404-tsx-c8e5eead2e3923f84014.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport Header from '../components/Header';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n\nconst ErrorTemplate = css`\n  padding: 7vw 4vw;\n`;\n\nconst ErrorCode = styled.h1`\n  margin: 0;\n  font-size: 12vw;\n  line-height: 1em;\n  letter-spacing: -5px;\n  opacity: 0.3;\n`;\n\nconst ErrorDescription = styled.p`\n  margin: 0;\n  color: ${colors.midgrey};\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 400;\n`;\n\nconst ErrorLink = css`\n  display: inline-block;\n  margin-top: 5px;\n`;\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst NotFoundPage: React.FC<NotFoundTemplateProps> = () => {\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <Header />\n        <main id=\"site-main\" css={[ErrorTemplate, outer]}>\n          <div css={inner}>\n            <section style={{ textAlign: 'center' }}>\n              <ErrorCode>404</ErrorCode>\n              <ErrorDescription>Page not found</ErrorDescription>\n              <Link css={ErrorLink} to=\"\">\n                Go to the front page â†’\n              </Link>\n            </section>\n          </div>\n        </main>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default NotFoundPage;\n","export const colors = {\n  blue: '#3eb0ef',\n  green: '#a4d037',\n  purple: '#ad26b4',\n  yellow: '#fecd35',\n  red: '#f05230',\n  darkgrey: '#15171A',\n  midgrey: '#738a94',\n  lightgrey: '#c5d2d9',\n  whitegrey: '#e5eff5',\n  pink: '#fa3a57',\n  brown: '#a3821a',\n};\n","export interface WebsiteConfig {\n  title: string;\n  description: string;\n  siteUrl: string;\n}\n\nconst config: WebsiteConfig = {\n  title: 'Monthly Code',\n  description: 'Code every month',\n  siteUrl: 'https://monthlycode.dev',\n};\n\nexport default config;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledWrapper = styled.div`\n  /* box-sizing: border-box; */\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  margin: 0 auto;\n  max-width: 900px;\n  padding: 0 2em;\n\n  @media (max-width: 500px) {\n    .wrapper_minimal {\n      padding: 0 4vw;\n    }\n  }\n`;\n\ninterface WrapperProps {\n  className?: string;\n}\n\nconst Wrapper: React.FC<WrapperProps> = ({ children, className }) => (\n  <StyledWrapper className={className}>{children}</StyledWrapper>\n);\n\nexport default Wrapper;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport config from '../website-config';\n\nconst HeaderStyles = css`\n  align-items: center;\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 0 auto;\n  margin-bottom: 4rem;\n  padding: 1.2rem 0 2rem;\n  width: 100%;\n\n  @media (max-width: 500px) {\n    margin-bottom: 0.2rem;\n  }\n`;\n\nconst HeaderTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: bold;\n  margin: 0;\n\n  a {\n    color: #1c2437;\n  }\n`;\n\nconst HeaderNav = styled.nav`\n  display: flex;\n  margin-left: auto;\n  /* justify-content: space-between; */\n  width: auto;\n`;\n\nconst HeaderLink = css`\n  margin-left: 2.1rem;\n  font-family: 'Nanum Myeongjo', 'Open Sans', sans-serif;\n  font-size: 1.5rem;\n  line-height: 1.6;\n  padding: 0;\n  color: rgba(0, 0, 0, 0.7);\n  /* transition: background .2s ease-in-out; */\n\n  @media (max-width: 500px) {\n    margin-left: 1.2rem;\n  }\n\n  :hover {\n    /* color: rgba(0, 0, 0, 0.84); */\n    /* background: #FFEA00; */\n    /* border-radius: 8px; */\n    transition: all 0.2s ease-in-out;\n    box-shadow: 0 2px 0 #2b2b2b;\n  }\n`;\n\nconst Header: React.FC<any> = () => {\n  return (\n    <header css={HeaderStyles} role=\"banner\">\n      <HeaderTitle>\n        <a title={config.title} href={config.siteUrl}>\n          {config.title}\n        </a>\n      </HeaderTitle>\n      <HeaderNav role=\"navigation\">\n        <Link css={HeaderLink} to=\"/\">\n          Posts\n        </Link>\n        <Link css={HeaderLink} to=\"/about\">\n          About\n        </Link>\n        <Link css={HeaderLink} to=\"/project\">\n          Coding\n        </Link>\n      </HeaderNav>\n    </header>\n  );\n};\n\nexport default Header;\n","import { Global, css } from '@emotion/core';\nimport { darken, lighten } from 'polished';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { colors } from '../styles/colors';\n// @ts-ignore\nimport favicon from '../../src/favicon.ico';\n\ninterface IndexProps {\n  className?: string;\n}\n\nconst GlobalStyles = css`\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  img {\n    max-width: 100%;\n  }\n  html {\n    box-sizing: border-box;\n    font-family: sans-serif;\n\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n  a {\n    background-color: transparent;\n  }\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  i,\n  em,\n  dfn {\n    font-style: italic;\n  }\n  h1 {\n    margin: 0.67em 0;\n    font-size: 2em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    position: relative;\n    font-size: 75%;\n    line-height: 0;\n    vertical-align: baseline;\n  }\n  sup {\n    top: -0.5em;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  img {\n    border: 0;\n  }\n  svg:not(:root) {\n    overflow: hidden;\n  }\n  mark {\n    background-color: #fdffb6;\n  }\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    margin: 0;\n    color: inherit;\n    font: inherit;\n  }\n  button {\n    overflow: visible;\n    border: none;\n  }\n  button,\n  select {\n    text-transform: none;\n  }\n  button,\n  html input[type='button'],\n  input[type='reset'],\n  input[type='submit'] {\n    cursor: pointer;\n\n    -webkit-appearance: button;\n  }\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n  input {\n    line-height: normal;\n  }\n  input:focus {\n    outline: none;\n  }\n  input[type='checkbox'],\n  input[type='radio'] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  input[type='search'] {\n    box-sizing: content-box;\n\n    -webkit-appearance: textfield;\n  }\n  input[type='search']::-webkit-search-cancel-button,\n  input[type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  legend {\n    padding: 0;\n    border: 0;\n  }\n  textarea {\n    overflow: auto;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  td,\n  th {\n    padding: 0;\n  }\n\n  html {\n    overflow-x: hidden;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n    font-size: 62.5%;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  body {\n    overflow-x: hidden;\n    color: ${darken('0.25', colors.midgrey)};\n    font-family: 'Nanum Myeongjo', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',\n      sans-serif;\n    font-size: 1.5rem;\n    line-height: 1.6em;\n    font-weight: 400;\n    font-style: normal;\n    letter-spacing: 0;\n    text-rendering: optimizeLegibility;\n    background: #fff;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -moz-font-feature-settings: 'liga' on;\n  }\n\n  ::selection {\n    text-shadow: none;\n    background: ${lighten('0.3', colors.blue)};\n  }\n\n  hr {\n    position: relative;\n    display: block;\n    width: 100%;\n    margin: 2.5em 0 3.5em;\n    padding: 0;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n  }\n\n  audio,\n  canvas,\n  iframe,\n  img,\n  svg,\n  video {\n    vertical-align: middle;\n  }\n\n  fieldset {\n    margin: 0;\n    padding: 0;\n    border: 0;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  p,\n  ul,\n  ol,\n  dl,\n  blockquote {\n    margin: 0 0 1.5em 0;\n  }\n\n  ol,\n  ul {\n    padding-left: 1.3em;\n    padding-right: 1.5em;\n  }\n\n  ol ol,\n  ul ul,\n  ul ol,\n  ol ul {\n    margin: 0.5em 0 1em;\n  }\n\n  ul {\n    list-style: disc;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  ul,\n  ol {\n    max-width: 100%;\n  }\n\n  li {\n    margin: 0.5em 0;\n    padding-left: 0.3em;\n    line-height: 1.6em;\n  }\n\n  dt {\n    float: left;\n    margin: 0 20px 0 0;\n    width: 120px;\n    color: ${colors.darkgrey};\n    font-weight: 500;\n    text-align: right;\n  }\n\n  dd {\n    margin: 0 0 5px 0;\n    text-align: left;\n  }\n\n  blockquote {\n    margin: 1.5em 0;\n    padding: 0 1.6em 0 1.6em;\n    border-left: ${colors.whitegrey} 0.5em solid;\n  }\n\n  blockquote p {\n    margin: 0.8em 0;\n    font-size: 1.2em;\n    font-weight: 300;\n  }\n\n  blockquote small {\n    display: inline-block;\n    margin: 0.8em 0 0.8em 1.5em;\n    font-size: 0.9em;\n    opacity: 0.8;\n  }\n\n  blockquote small:before {\n    content: '\\\\2014 \\\\00A0';\n  }\n\n  blockquote cite {\n    font-weight: bold;\n  }\n  blockquote cite a {\n    font-weight: normal;\n  }\n\n  a {\n    color: rgba(0, 0, 0, 0.84);\n    text-decoration: none;\n    transition: all 0.4s ease-in-out;\n  }\n\n  a:hover {\n    // text-decoration: underline;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 0;\n    line-height: 1.15;\n    font-weight: 700;\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin: 0 0 0.5em 0;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 1.8rem;\n    }\n  }\n\n  h2 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.8rem;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 1.5rem;\n    }\n  }\n\n  h3 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.5rem;\n    font-weight: 500;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 1.2rem;\n    }\n  }\n\n  h4 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.3rem;\n    font-weight: 500;\n  }\n\n  h5 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.2rem;\n    font-weight: 500;\n  }\n\n  h6 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.1rem;\n    font-weight: 500;\n  }\n`;\n\nconst IndexLayout: React.FC<IndexProps> = props => {\n  return (\n    <div className={props.className}>\n      <Helmet>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Nanum+Myeongjo\" />\n        <link rel=\"icon\" href={favicon} type=\"image/x-icon\" />\n      </Helmet>\n      <Global styles={GlobalStyles} />\n      {props.children}\n    </div>\n  );\n};\n\nexport default IndexLayout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-36e47e74810a0d8c32a77f495c49cf8e.ico\";","import { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nexport const outer = css`\n  position: relative;\n  padding: 0 4vw;\n`;\n\n// Centered content container blocks\nexport const inner = css`\n  margin: 0 auto;\n  max-width: 1040px;\n  width: 100%;\n`;\n\nexport const ArticleWrapper = styled.article``;\n\nexport const PostTitle = styled.h1`\n  font-size: 2.4rem;\n  font-weight: bold;\n  margin: 0;\n\n  @media (max-width: 500px) {\n    font-size: 1.6rem;\n  }\n`;\nexport const PostDate = styled.time`\n  display: block;\n  font-family: 'Avenir';\n  font-size: 0.8rem;\n  color: rgba(0, 0, 0, 0.58);\n  /* margin: 0.3rem 0; */\n`;\n"],"sourceRoot":""}